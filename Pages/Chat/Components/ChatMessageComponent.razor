@using WASMChat.Shared.Models.Chats
@using System.Diagnostics.CodeAnalysis
@using WASMChat.Shared.Requests.Chats.Messages
@inject ChatHubClient HubClient
@inject ChatJsInterop JsInterop

<div class="@(IsAuthor ? "message-author" : "message-other")">
    <div class="name-time">
        <ChatUserComponent User="@Message.Author"/> at @Message.SentTime.ToString("HH:mm")
        @if (IsAuthor)
        {
            <button class="button-delete" @onclick="@DeleteMessage">x</button>
        }
    </div>
    <div>
        @Message.Text
    </div>
</div>

@code {

    [Parameter, EditorRequired]
    public ChatMessageModel Message { get; set; } = null!;

    [Parameter]
    public bool IsAuthor { get; set; } = false;

    private async Task DeleteMessage()
    {
        var request = new DeleteChatMessageRequest
        {
            ChatId = Message.ChatId,
            MessageId = Message.Id,
        };
        if (await JsInterop.CheckMessageDeletionIntended() is false) 
            return;
        
        await HubClient.DeleteMessage(request);
    }
}