@using WASMChat.Shared.Models.Chats
@using System.Diagnostics.CodeAnalysis
@using WASMChat.Shared.Requests.Chats.Messages
@inject ChatHubClient HubClient
@inject IJSRuntime JsRuntime

<div class="@(IsAuthor ? "message-author" : "message-other")">
    <p>
        <ChatUserComponent User="@Message.Author"/> at @Message.SentTime.LocalDateTime
        @if (IsAuthor)
        {
            <button @onclick="@DeleteMessage">X</button>
        }
        <br/>
        @Message.Text
    </p>
</div>

@code {

    [Parameter, EditorRequired]
    public ChatMessageModel Message { get; set; } = null!;

    [Parameter]
    public bool IsAuthor { get; set; } = false;

    private async Task DeleteMessage()
    {
        var request = new DeleteChatMessageRequest
        {
            ChatId = Message.ChatId,
            MessageId = Message.Id,
        };
        if (await JsRuntime.ConfirmAsync("Вы уверены что хотите удалить сообщение?") is false) 
            return;
        
        await HubClient.DeleteMessage(request);
    }
}