@page "/chats/create"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject CurrentUserAccessor CurrentUserAccessor

<a href="chats/">⬅️ Назад</a><br/>
<input type="text" maxlength="64" @bind="@_chatName"/><br/>
@if (_currentUser is not null)
{
    <input type="checkbox" checked disabled/>
    <ChatUserComponent User="@_currentUser"/>
    <text> (Это вы)</text>
    <br/>
}
@foreach (var user in _selectedUsers)
{
    <input type="checkbox" @onchange="@(e => _selectedUsers[user.Key] = (bool)e.Value!)"/>
    <ChatUserComponent User="@user.Key"/>
    <br/>
}
<button @onclick="@Submit">✅</button>

@code {

    private string _chatName = "Название чата";
    private ChatUserModel? _currentUser;
    private Dictionary<ChatUserModel, bool> _selectedUsers = new();

    protected override async Task OnInitializedAsync()
    {
        _currentUser = await CurrentUserAccessor.GetCurrentUserAsync();
        try
        {
            var result = await Http.GetFromJsonAsync<GetAllUsersResult>("api/Chats/users");
            _selectedUsers = result!.Users
                .Where(u => u.Id != _currentUser.Id)
                .ToDictionary(u => u, _ => false);
        }
        catch (Exception e)
        {
            Console.Error.WriteLine(e);
            throw;
        }
    }

    private async Task Submit()
    {
        if (FormIsIncomplete()) return;
        var request = new CreateChatRequest()
        {
            ChatName = _chatName,
            MemberIds = _selectedUsers
                .Where(x => x.Value)
                .Select(x => x.Key.Id)
                .ToArray()
        };

        try
        {
            var response = await Http.PostAsJsonAsync("api/Chats", request);
            var result = await response.Content.ReadFromJsonAsync<CreateChatResult>();

            int newChatId = result!.Chat.Id;
            NavigationManager.NavigateTo($"chats/{newChatId}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private bool FormIsIncomplete() =>
        string.IsNullOrWhiteSpace(_chatName) ||
        _selectedUsers.Any(u => u.Value) is false;
}