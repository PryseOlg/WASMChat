@page "/chats/{ChatId:int}"
@using WASMChat.Shared.Models.Chats
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using WASMChat.Shared.Requests.Chats
@using WASMChat.Shared.Results.Chats
@inject HttpClient Http

<link href="../../Client/Pages/Chats/Chat.razor.css" rel="stylesheet"/>

<div class="chat-container">
    <a href="/Chats/">⬅️ Назад</a>
    <button class="refresh-button" @onclick="@PullChat">🔃</button>
    <div class="chat-messages-container">
        @if (_chat is not null)
        {
            @foreach (var msg in _chat.Messages.OrderBy(m => m.SentTime))
            {
                <div class="message">
                    <ChatMessageComponent Message="@msg"/>
                </div>
                
            }
        }
    </div>
    <div class="chat-input-container">
        <textarea class="message-input" @bind="@_typedMessage" maxlength="2000"></textarea>
        <button class="send-button" @onclick="@SendMessage">📨</button>
    </div>
</div>


@code {
    [Parameter]
    public int ChatId { get; set; }
    private ChatModel? _chat;

    private string _typedMessage = string.Empty;

    protected override Task OnInitializedAsync() => PullChat();

    private async Task PullChat()
    {
        try
        {
            var result = await Http.GetFromJsonAsync<GetChatResult>($"api/Chats/{ChatId}");
            _chat = result!.Chat;
        }
        catch (AccessTokenNotAvailableException e)
        {
            e.Redirect();
        }
    }
    private async Task SendMessage()
    {
        if (_chat is null) return;
        
        var request = new PostChatMessageRequest()
        {
            Text = _typedMessage,
        };

        try
        {
            await Http.PostAsJsonAsync($"api/Chats/{_chat.Id}/messages", request);
            _typedMessage = string.Empty;
        }
        catch (Exception e)
        {
            Console.Error.WriteLine(e);
            throw;
        }

        await PullChat();
    }
}
